#!/bin/sh
#
# ============== #
#   Arch Linux   #
# ============== #
#
# Short install guide for Arch Linux with LUKS encryption and BTRFS partitions
# The script still requires some user interaction but I am working on it
#
# @author Markus @re1
# @version 2018-08-16

host=re1
user=markus
disk=sda
part=sda5                       # using windows for art
boot=sda2
lang=en_GB.UTF-8                # character langauge
language=en_GB:en:de_AT:de      # interface langauges
keymap=de-latin1-nodeadkeys     # keymap for keyboard input
zone=Region/City                # timezone

#loadkeys $keymap               # set keymap for further interaction


# ---------------- #
#   Partitioning   #
# ---------------- #
# fdisk g (new GPT scheme), n (new partition), w (write and quit), t (change partition type)
fdisk /dev/$disk                                    # 1 bios, +100M; 2 root

##  Encryption
cryptsetup luksFormat -M luks2 /dev/$part           # encrypt partition with LUKS
cryptsetup open /dev/$part root                     # map decrypted partition to /dev/mapper/root

mkfs.ext4 -L boot /dev/$boot                        # format boot partition with ext4
mkfs.btrfs -L arch /dev/mapper/root                 # format mapped partition with btrfs

##  BTRFS
mount /dev/mapper/root /mnt                         # mount mapped partition to /mnt

btrfs sub create /mnt/@                             # create subvol for root
btrfs sub create /mnt/@home                         # create subvol for home
btrfs sub create /mnt/@pkg                          # create subvol for pacman package cache
btrfs sub create /mnt/@snapshots                    # create subvol for snapshots

umount /mnt                                         # unmount mapped partition
mount /dev/mapper/root -o subvol=@ /mnt             # mount root subvol from mapped partition to /mnt

# create mount points for subvols
mkdir /mnt/home
mkdir -p /mnt/var/cache/pacman/pkg
mkdir /mnt/.snapshots

# mount subvols
mount /dev/mapper/root -o subvol=@home /mnt/home
mount /dev/mapper/root -o subvol=@pkg /mnt/var/cache/pacman/pkg
mount /dev/mapper/root -o subvol=@snapshots /mnt/.snapshots

mkdir /mnt/btrfs                                    # create mount point for btrfs root
mount /dev/mapper/root -o subvolid=5 /mnt/btrfs     # mount btrfs root to /mnt/btrfs

mkdir /mnt/boot                                     # create mount point for boot partition
mount /dev/$boot /mnt/boot                          # mount boot to /mnt/boot


# ---------------- #
#   Installation   #
# ---------------- #
#wifi-menu                                              # establish a wifi connection without ethernet

pacstrap /mnt base base-devel btrfs-progs zsh vim       # install arch base, btrfs, zsh and vim  to /mnt

genfstab -Lp /mnt >> /mnt/etc/fstab                     # generate fstab entries for /mnt into /mnt/etc/fstab

arch-chroot /mnt                                        # change root to /mnt

passwd                                                  # set password for root

pacman -Suy                                             # update packages

##  Boot
pacman -S grub                                          # install grub
# mark partition with UUID "device" as encrypted
set GRUB_CMDLINE_LINUX="cryptdevice=UUID=device:cryptroot"    
nano /etc/default/grub
nano /etc/mkinitcpio.conf                               # add "encrypt" to HOOKS

grub-mkconfig -o /boot/grub/grub.cfg                    # generate grub config into /boot/grub/grub.cfg
grub-install /dev/sda --efi-directory=/boot/EFI         # install grub to /dev/sda


# ----------------- #
#   Configuration   #
# ----------------- #
echo $host > /etc/hostname                              # set hostname

##  Language
echo LANG=$lang > /etc/locale.conf                      # use austrian keys
echo LANGUAGE=$language >> /etc/locale.conf             # use languages ordered by priority
# uncomment languages for locale generation
IFS=':' read -rA langs <<< "$language"
for l in $langs; do; sed -i "s/\#$l\./$l\./g" /etc/locale.gen; done

locale-gen                                              # update locale.conf

echo KEYMAP=$keymap > /etc/vconsole.conf                # save keys to virtual terminal config

##  Time
# link local time to specified timezone
ln -sf /usr/share/zoneinfo/$zone /etc/localtime

##  User
# add new user with wheel, audio and video privileges
useradd -mg users -G wheel,audio,video -s /bin/zsh $user   
passwd $user                                            # set password for user markus

EDITOR=nano visudo                                      # find "group sudo" and uncomment %sudo ALL(ALL) ALL

##  Tools
pacman -S acpid avahi cups                              # power management, DNS discovery, print server
# enable installed packages
systemctl enable acpid avahi-daemon org.cups.cupsd.service

systemctl enable systemd-timesyncd.service              # enable automatic time settings
hwclock -w                                              # adjust hardware clock

### NVIDIA
#pacman -S bumblebee mesa nvidia bbswitch primus
#gpasswd -a $user bumblebee
#systemctl enable bumblebeed.service

### VPN
#pacman -S openvpn

### Tor
#pacman -S tor torsocks
#pacman -S arm                                          # for monitoring bandwidth and connection details
#systemctl enable tor
